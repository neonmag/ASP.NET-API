stages:
  - build
  - deploy

build-docker:
  stage: build
  image: docker:stable
  only:
    - main
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab+deploy-token-1 -p "${ACCESS_TOKEN}" registry.brist.loc
  script:
    - docker build -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}" --build-arg branch="${CI_COMMIT_REF_NAME}" .
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"

deploy:
  stage: deploy
  image: docker:20.10-git
  only:
    - main
  variables:
   DOCKER_HOST: "ssh://$SERVER_USER@$SERVER_IP" #server user - dev server ip - 172.16.10.22
  before_script:
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s) # Start the SSH agent
    # Handle line breaks in the private key and ensure correct formatting
    - echo "$ID_RSA" | tr -d '\r' | sed 's/\\n/\n/g' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    # Debug: Print the private key content (remove this in the final version)
    #- cat ~/.ssh/id_rsa
    - ssh-add ~/.ssh/id_rsa # Add the private key
    - ssh-add -l # List the keys added to the agent to ensure the key is added
    - ssh-keyscan -H "$SERVER_IP" >> ~/.ssh/known_hosts #server ip - 172.16.10.22
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - ssh $SERVER_USER@$SERVER_IP "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY && docker pull $TAG_COMMIT && docker container rm -f $TAG_COMMIT || true && docker run -d -p 80:80 --name brist-back $TAG_COMMIT"







