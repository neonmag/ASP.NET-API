// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Slush.Data;

#nullable disable

namespace Slush.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240228134734_Migrations")]
    partial class Migrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.Property<String>("groupsid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("usersid")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("groupsid", "usersid");

                    b.HasIndex("usersid");

                    b.ToTable("GroupUser");
                });

            modelBuilder.Entity("Slush.Data.Entity.Categories", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("dbCategories");
                });

            modelBuilder.Entity("Slush.Data.Entity.CategoryByAuthor", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("dbCategoriesByAuthors");
                });

            modelBuilder.Entity("Slush.Data.Entity.CategoryByUser", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("dbCategoriesByUsers");
                });

            modelBuilder.Entity("Slush.Data.Entity.CategoryForGame", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("categoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("gameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("dbCategoriesForGame");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameComment", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("Authorid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("GamePostsid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("gamePostId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Authorid");

                    b.HasIndex("GamePostsid");

                    b.ToTable("dbGameComments");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameGroup", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("gameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("dbGameGroups");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameGuide", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("authorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("discussionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dislikesCount")
                        .HasColumnType("int");

                    b.Property<String>("gameGroupId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("gameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("likesCount")
                        .HasColumnType("int");

                    b.Property<String>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("gameGroupId");

                    b.ToTable("dbGameGuides");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameNews", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("authorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("discussionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dislikesCount")
                        .HasColumnType("int");

                    b.Property<String>("gameGroupid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("gameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("likesCount")
                        .HasColumnType("int");

                    b.Property<String>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("gameGroupid");

                    b.ToTable("dbGameNews");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GamePosts", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("GameTopicid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("authorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("discussionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dislikesCount")
                        .HasColumnType("int");

                    b.Property<String>("gameGroupid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("gameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("likesCount")
                        .HasColumnType("int");

                    b.Property<String>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("GameTopicid");

                    b.HasIndex("gameGroupid");

                    b.ToTable("dbGamePosts");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameTopic", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("GameGroupid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("attachedId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("GameGroupid");

                    b.ToTable("dbGameTopics");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.Group", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("attachedId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("dbGroups");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GroupComment", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("groupId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("groupId");

                    b.ToTable("dbGroupComments");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.Post", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("Topicid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("authorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("discussionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dislikesCount")
                        .HasColumnType("int");

                    b.Property<String>("gameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("likesCount")
                        .HasColumnType("int");

                    b.Property<String>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Topicid");

                    b.ToTable("dbPosts");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.Topic", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("Groupid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("attachedId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("authorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Groupid");

                    b.ToTable("dbTopics");
                });

            modelBuilder.Entity("Slush.Data.Entity.Language", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("dbLanguages");
                });

            modelBuilder.Entity("Slush.Data.Entity.LanguageInGame", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("DLCInShopid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("GameInShopid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("gameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("languageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("DLCInShopid");

                    b.HasIndex("GameInShopid");

                    b.ToTable("dbLanguagesInGame");
                });

            modelBuilder.Entity("Slush.Data.Entity.MaximumSystemRequirement", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("OS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("RAM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("freeDiskSpace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("gameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("processor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("video")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("dbMaximumSystemRequirements");
                });

            modelBuilder.Entity("Slush.Data.Entity.MinimalSystemRequirement", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("OS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("RAM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("freeDiskSpace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("gameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("processor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("video")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("dbMinimalSystemRequirements");
                });

            modelBuilder.Entity("Slush.Data.Entity.Profile.Screenshot", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("GameGroupid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("Userid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("authorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("discussionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dislikesCount")
                        .HasColumnType("int");

                    b.Property<String>("gameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("likesCount")
                        .HasColumnType("int");

                    b.Property<String>("screenshotUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("GameGroupid");

                    b.HasIndex("Userid");

                    b.ToTable("dbScreenshots");
                });

            modelBuilder.Entity("Slush.Data.Entity.Profile.User", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("passwordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("dbUsers");
                });

            modelBuilder.Entity("Slush.Data.Entity.Profile.UserComment", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("authorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<String>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("userId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("dbUserComments");
                });

            modelBuilder.Entity("Slush.Data.Entity.Profile.Video", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("GameGroupid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("Userid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("authorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("discussionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dislikesCount")
                        .HasColumnType("int");

                    b.Property<String>("gameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("likesCount")
                        .HasColumnType("int");

                    b.Property<String>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("videoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("GameGroupid");

                    b.HasIndex("Userid");

                    b.ToTable("dbVideos");
                });

            modelBuilder.Entity("Slush.Data.Entity.SystemRequirement", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("OS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("RAM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("freeDiskSpace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("gameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("processor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("video")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("dbSystemRequirements");
                });

            modelBuilder.Entity("Slush.Entity.Abstract.Author", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("subscribersCount")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("Slush.Entity.Profile.Friends", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("friendId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("userId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("dbFriends");
                });

            modelBuilder.Entity("Slush.Entity.Profile.OwnedGame", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("ownedGameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("userId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("dbOwnedGames");
                });

            modelBuilder.Entity("Slush.Entity.Profile.WishedGame", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("ownedGameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("userId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("dbWishedGames");
                });

            modelBuilder.Entity("Slush.Entity.Store.Product.Creators.Developer", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("backgroundImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("subscribersCount")
                        .HasColumnType("int");

                    b.Property<String>("urlForNewsPage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("dbDevelopers");
                });

            modelBuilder.Entity("Slush.Entity.Store.Product.Creators.Publisher", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("backgroundImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("subscribersCount")
                        .HasColumnType("int");

                    b.Property<String>("urlForNewsPage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("dbPublishers");
                });

            modelBuilder.Entity("Slush.Entity.Store.Product.DLCInShop", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("categories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("categoriesId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateOfRelease")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("developerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("discount")
                        .HasColumnType("int");

                    b.Property<String>("gameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("gameImages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("languagesId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("previeImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<String>("publisherId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("systemRequirementsId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("urlForContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("dbDLCsInShop");
                });

            modelBuilder.Entity("Slush.Entity.Store.Product.GameInShop", b =>
                {
                    b.Property<String>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<String>("categoriesId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateOfRelease")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime2");

                    b.Property<String>("developerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("discount")
                        .HasColumnType("int");

                    b.Property<String>("gameImages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("languagesId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("previeImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<String>("publisherId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("systemRequirementsId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<String>("urlForContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("dbGamesInShops");
                });

            modelBuilder.Entity("System.Collections.Generic.List<object>", b =>
                {
                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.ToTable("List<object>");
                });

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.HasOne("Slush.Data.Entity.Community.Group", null)
                        .WithMany()
                        .HasForeignKey("groupsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("usersid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameComment", b =>
                {
                    b.HasOne("Slush.Entity.Abstract.Author", "Author")
                        .WithMany()
                        .HasForeignKey("Authorid");

                    b.HasOne("Slush.Data.Entity.Community.GameGroup.GamePosts", null)
                        .WithMany("comments")
                        .HasForeignKey("GamePostsid");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameGuide", b =>
                {
                    b.HasOne("Slush.Data.Entity.Community.GameGroup.GameGroup", "gameGroup")
                        .WithMany()
                        .HasForeignKey("gameGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("gameGroup");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameNews", b =>
                {
                    b.HasOne("Slush.Data.Entity.Community.GameGroup.GameGroup", "gameGroup")
                        .WithMany("news")
                        .HasForeignKey("gameGroupid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("gameGroup");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GamePosts", b =>
                {
                    b.HasOne("Slush.Data.Entity.Community.GameGroup.GameTopic", null)
                        .WithMany("posts")
                        .HasForeignKey("GameTopicid");

                    b.HasOne("Slush.Data.Entity.Community.GameGroup.GameGroup", "gameGroup")
                        .WithMany()
                        .HasForeignKey("gameGroupid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("gameGroup");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameTopic", b =>
                {
                    b.HasOne("Slush.Data.Entity.Community.GameGroup.GameGroup", null)
                        .WithMany("topics")
                        .HasForeignKey("GameGroupid");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GroupComment", b =>
                {
                    b.HasOne("Slush.Data.Entity.Community.Group", null)
                        .WithMany("comments")
                        .HasForeignKey("groupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.Post", b =>
                {
                    b.HasOne("Slush.Data.Entity.Community.Topic", null)
                        .WithMany("posts")
                        .HasForeignKey("Topicid");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.Topic", b =>
                {
                    b.HasOne("Slush.Data.Entity.Community.Group", null)
                        .WithMany("topics")
                        .HasForeignKey("Groupid");
                });

            modelBuilder.Entity("Slush.Data.Entity.LanguageInGame", b =>
                {
                    b.HasOne("Slush.Entity.Store.Product.DLCInShop", null)
                        .WithMany("languages")
                        .HasForeignKey("DLCInShopid");

                    b.HasOne("Slush.Entity.Store.Product.GameInShop", null)
                        .WithMany("languages")
                        .HasForeignKey("GameInShopid");
                });

            modelBuilder.Entity("Slush.Data.Entity.Profile.Screenshot", b =>
                {
                    b.HasOne("Slush.Data.Entity.Community.GameGroup.GameGroup", null)
                        .WithMany("screenshots")
                        .HasForeignKey("GameGroupid");

                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany("screenshots")
                        .HasForeignKey("Userid");
                });

            modelBuilder.Entity("Slush.Data.Entity.Profile.UserComment", b =>
                {
                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany("comments")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.Profile.Video", b =>
                {
                    b.HasOne("Slush.Data.Entity.Community.GameGroup.GameGroup", null)
                        .WithMany("videos")
                        .HasForeignKey("GameGroupid");

                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany("videos")
                        .HasForeignKey("Userid");
                });

            modelBuilder.Entity("Slush.Entity.Profile.Friends", b =>
                {
                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany("friends")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Entity.Profile.OwnedGame", b =>
                {
                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany("ownedGames")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Entity.Profile.WishedGame", b =>
                {
                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany("wishedGames")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameGroup", b =>
                {
                    b.Navigation("news");

                    b.Navigation("screenshots");

                    b.Navigation("topics");

                    b.Navigation("videos");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GamePosts", b =>
                {
                    b.Navigation("comments");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameTopic", b =>
                {
                    b.Navigation("posts");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.Group", b =>
                {
                    b.Navigation("comments");

                    b.Navigation("topics");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.Topic", b =>
                {
                    b.Navigation("posts");
                });

            modelBuilder.Entity("Slush.Data.Entity.Profile.User", b =>
                {
                    b.Navigation("comments");

                    b.Navigation("friends");

                    b.Navigation("ownedGames");

                    b.Navigation("screenshots");

                    b.Navigation("videos");

                    b.Navigation("wishedGames");
                });

            modelBuilder.Entity("Slush.Entity.Store.Product.DLCInShop", b =>
                {
                    b.Navigation("languages");
                });

            modelBuilder.Entity("Slush.Entity.Store.Product.GameInShop", b =>
                {
                    b.Navigation("languages");
                });
#pragma warning restore 612, 618
        }
    }
}
