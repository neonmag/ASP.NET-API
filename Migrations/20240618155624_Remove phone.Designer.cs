// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Slush.Data;

#nullable disable

namespace Slush.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240618155624_Remove phone")]
    partial class Removephone
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Slush.Data.Entity.Categories", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("dbCategories");
                });

            modelBuilder.Entity("Slush.Data.Entity.CategoryByAuthor", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("authorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("authorId");

                    b.ToTable("dbCategoriesByAuthors");
                });

            modelBuilder.Entity("Slush.Data.Entity.CategoryByUser", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("authorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("dbCategoriesByUsers");
                });

            modelBuilder.Entity("Slush.Data.Entity.CategoryForGame", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("categoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("gameId")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.HasIndex("categoryId");

                    b.HasIndex("gameId");

                    b.ToTable("dbCategoriesForGame");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameComment", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("authorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("content")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("gamePostId")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.HasIndex("authorId");

                    b.HasIndex("gamePostId");

                    b.ToTable("dbGameComments");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameGroup", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("gameId")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.HasIndex("gameId");

                    b.ToTable("dbGameGroups");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameGuide", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("authorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("content")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("gameGroupId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("gameId")
                        .HasColumnType("char(36)");

                    b.Property<int>("likesCount")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("authorId");

                    b.HasIndex("gameGroupId");

                    b.HasIndex("gameId");

                    b.ToTable("dbGameGuides");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameNews", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("authorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("content")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("gameGroupId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("gameId")
                        .HasColumnType("char(36)");

                    b.Property<int>("likesCount")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("authorId");

                    b.HasIndex("gameGroupId");

                    b.HasIndex("gameId");

                    b.ToTable("dbGameNews");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GamePosts", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("authorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("content")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("gameId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("gameTopicId")
                        .HasColumnType("char(36)");

                    b.Property<int>("likesCount")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("authorId");

                    b.HasIndex("gameId");

                    b.HasIndex("gameTopicId");

                    b.ToTable("dbGamePosts");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameTopic", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("attachedId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("attachedId");

                    b.ToTable("dbGameTopics");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.Group", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("attachedId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("imageUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("attachedId");

                    b.ToTable("dbGroups");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GroupComment", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("content")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("groupId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("userId")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.HasIndex("groupId");

                    b.HasIndex("userId");

                    b.ToTable("dbGroupComments");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.Post", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("authorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("content")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("discussionId")
                        .HasColumnType("char(36)");

                    b.Property<int>("likesCount")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("authorId");

                    b.HasIndex("discussionId");

                    b.ToTable("dbPosts");
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.Topic", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("attachedId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("authorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("attachedId");

                    b.HasIndex("authorId");

                    b.ToTable("dbTopics");
                });

            modelBuilder.Entity("Slush.Data.Entity.Language", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("dbLanguages");
                });

            modelBuilder.Entity("Slush.Data.Entity.LanguageInGame", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("gameId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("languageId")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.HasIndex("gameId");

                    b.HasIndex("languageId");

                    b.ToTable("dbLanguagesInGame");
                });

            modelBuilder.Entity("Slush.Data.Entity.MaximumSystemRequirement", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("OS")
                        .HasColumnType("longtext");

                    b.Property<string>("RAM")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("freeDiskSpace")
                        .HasColumnType("longtext");

                    b.Property<Guid>("gameId")
                        .HasColumnType("char(36)");

                    b.Property<string>("processor")
                        .HasColumnType("longtext");

                    b.Property<string>("video")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("dbMaximumSystemRequirements");
                });

            modelBuilder.Entity("Slush.Data.Entity.MinimalSystemRequirement", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("OS")
                        .HasColumnType("longtext");

                    b.Property<string>("RAM")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("freeDiskSpace")
                        .HasColumnType("longtext");

                    b.Property<Guid>("gameId")
                        .HasColumnType("char(36)");

                    b.Property<string>("processor")
                        .HasColumnType("longtext");

                    b.Property<string>("video")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("dbMinimalSystemRequirements");
                });

            modelBuilder.Entity("Slush.Data.Entity.Profile.Screenshot", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("authorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("gameId")
                        .HasColumnType("char(36)");

                    b.Property<int>("likesCount")
                        .HasColumnType("int");

                    b.Property<string>("screenshotUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("authorId");

                    b.HasIndex("gameId");

                    b.ToTable("dbScreenshots");
                });

            modelBuilder.Entity("Slush.Data.Entity.Profile.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<float>("amountOfMoney")
                        .HasColumnType("float");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("passwordSalt")
                        .HasColumnType("longtext");

                    b.Property<bool>("verified")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("id");

                    b.ToTable("dbUsers");
                });

            modelBuilder.Entity("Slush.Data.Entity.Profile.UserComment", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("authorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("content")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("userId")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.HasIndex("authorId");

                    b.HasIndex("userId");

                    b.ToTable("dbUserComments");
                });

            modelBuilder.Entity("Slush.Data.Entity.Profile.Video", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("authorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("gameId")
                        .HasColumnType("char(36)");

                    b.Property<int>("likesCount")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.Property<string>("videoUrl")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("authorId");

                    b.HasIndex("gameId");

                    b.ToTable("dbVideos");
                });

            modelBuilder.Entity("Slush.Data.Entity.SystemRequirement", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("OS")
                        .HasColumnType("longtext");

                    b.Property<string>("RAM")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("freeDiskSpace")
                        .HasColumnType("longtext");

                    b.Property<Guid>("gameId")
                        .HasColumnType("char(36)");

                    b.Property<string>("processor")
                        .HasColumnType("longtext");

                    b.Property<string>("video")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("dbSystemRequirements");
                });

            modelBuilder.Entity("Slush.Entity.Chat.Chat", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("firstUser")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("secondUser")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.HasIndex("firstUser");

                    b.HasIndex("secondUser");

                    b.ToTable("dbChats");
                });

            modelBuilder.Entity("Slush.Entity.Chat.Message", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("chatId")
                        .HasColumnType("char(36)");

                    b.Property<string>("content")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("senderId")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.HasIndex("chatId");

                    b.HasIndex("senderId");

                    b.ToTable("dbMessages");
                });

            modelBuilder.Entity("Slush.Entity.Discussion", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("attachedId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("authorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("content")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("likesCount")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("dbDiscussions");
                });

            modelBuilder.Entity("Slush.Entity.Profile.Achievement", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("amountOfExperience")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("urlForImage")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("dbAchievements");
                });

            modelBuilder.Entity("Slush.Entity.Profile.AchievementByUser", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("achievementId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("awardTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("userId")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.HasIndex("achievementId");

                    b.HasIndex("userId");

                    b.ToTable("dbAchievementByUser");
                });

            modelBuilder.Entity("Slush.Entity.Profile.CategoryByUserForGame", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("dbCategoryByUserForGames");
                });

            modelBuilder.Entity("Slush.Entity.Profile.Friends", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("friendId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("userId")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.HasIndex("friendId");

                    b.HasIndex("userId");

                    b.ToTable("dbFriends");
                });

            modelBuilder.Entity("Slush.Entity.Profile.OwnedGame", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ownedGameId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("userId")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.HasIndex("ownedGameId");

                    b.HasIndex("userId");

                    b.ToTable("dbOwnedGames");
                });

            modelBuilder.Entity("Slush.Entity.Profile.Settings", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("approvedFriendRequest")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("attachedUserId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("bigSaleNotification")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("declinedFriendRequest")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("friendRequestNotification")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("newCommentNotification")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("saleFromWishlistNotification")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("id");

                    b.HasIndex("attachedUserId");

                    b.ToTable("dbSettings");
                });

            modelBuilder.Entity("Slush.Entity.Profile.UserCategory", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("categoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ownedGameId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("userId")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.HasIndex("categoryId");

                    b.HasIndex("ownedGameId");

                    b.HasIndex("userId");

                    b.ToTable("dbUserCategories");
                });

            modelBuilder.Entity("Slush.Entity.Profile.WalletTransactions", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("currency")
                        .HasColumnType("float");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("transactionObj")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("userId")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.HasIndex("transactionObj");

                    b.HasIndex("userId");

                    b.ToTable("dbWalletTransactions");
                });

            modelBuilder.Entity("Slush.Entity.Profile.WishedGame", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ownedGameId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("userId")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.HasIndex("ownedGameId");

                    b.HasIndex("userId");

                    b.ToTable("dbWishedGames");
                });

            modelBuilder.Entity("Slush.Entity.Store.Product.Creators.Developer", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("avatar")
                        .HasColumnType("longtext");

                    b.Property<string>("backgroundImage")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<int>("subscribersCount")
                        .HasColumnType("int");

                    b.Property<string>("urlForNewsPage")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("dbDevelopers");
                });

            modelBuilder.Entity("Slush.Entity.Store.Product.Creators.Publisher", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("avatar")
                        .HasColumnType("longtext");

                    b.Property<string>("backgroundImage")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<int>("subscribersCount")
                        .HasColumnType("int");

                    b.Property<string>("urlForNewsPage")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("dbPublishers");
                });

            modelBuilder.Entity("Slush.Entity.Store.Product.DLCInShop", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("dateOfRelease")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("developerId")
                        .HasColumnType("char(36)");

                    b.Property<int>("discount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("discountFinish")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("gameId")
                        .HasColumnType("char(36)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("previeImage")
                        .HasColumnType("longtext");

                    b.Property<float>("price")
                        .HasColumnType("float");

                    b.Property<Guid>("publisherId")
                        .HasColumnType("char(36)");

                    b.Property<string>("urlForContent")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("developerId");

                    b.HasIndex("gameId");

                    b.HasIndex("publisherId");

                    b.ToTable("dbDLCsInShop");
                });

            modelBuilder.Entity("Slush.Entity.Store.Product.GameBundle", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("discount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("discountFinish")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("price")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("dbGameBundles");
                });

            modelBuilder.Entity("Slush.Entity.Store.Product.GameBundleCollection", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("bundleId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("dlcId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("gameId")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.HasIndex("bundleId");

                    b.HasIndex("dlcId");

                    b.HasIndex("gameId");

                    b.ToTable("dbGameBundleCollections");
                });

            modelBuilder.Entity("Slush.Entity.Store.Product.GameInShop", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("dateOfRelease")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("developerId")
                        .HasColumnType("char(36)");

                    b.Property<int>("discount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("discountFinish")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("previeImage")
                        .HasColumnType("longtext");

                    b.Property<float>("price")
                        .HasColumnType("float");

                    b.Property<Guid>("publisherId")
                        .HasColumnType("char(36)");

                    b.Property<string>("urlForContent")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("developerId");

                    b.HasIndex("publisherId");

                    b.ToTable("dbGamesInShops");
                });

            modelBuilder.Entity("System.Collections.Generic.List<object>", b =>
                {
                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.ToTable("List<object>");
                });

            modelBuilder.Entity("Slush.Data.Entity.CategoryByAuthor", b =>
                {
                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("authorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.CategoryForGame", b =>
                {
                    b.HasOne("Slush.Data.Entity.Categories", null)
                        .WithMany()
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Entity.Store.Product.GameInShop", null)
                        .WithMany()
                        .HasForeignKey("gameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameComment", b =>
                {
                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("authorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Community.GameGroup.GamePosts", null)
                        .WithMany()
                        .HasForeignKey("gamePostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameGroup", b =>
                {
                    b.HasOne("Slush.Entity.Store.Product.GameInShop", null)
                        .WithMany()
                        .HasForeignKey("gameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameGuide", b =>
                {
                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("authorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Community.GameGroup.GameGroup", null)
                        .WithMany()
                        .HasForeignKey("gameGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Slush.Entity.Store.Product.GameInShop", null)
                        .WithMany()
                        .HasForeignKey("gameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameNews", b =>
                {
                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("authorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Community.GameGroup.GameGroup", null)
                        .WithMany()
                        .HasForeignKey("gameGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Slush.Entity.Store.Product.GameInShop", null)
                        .WithMany()
                        .HasForeignKey("gameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GamePosts", b =>
                {
                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("authorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Entity.Store.Product.GameInShop", null)
                        .WithMany()
                        .HasForeignKey("gameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Community.GameGroup.GameTopic", null)
                        .WithMany()
                        .HasForeignKey("gameTopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameTopic", b =>
                {
                    b.HasOne("Slush.Data.Entity.Community.GameGroup.GameGroup", null)
                        .WithMany()
                        .HasForeignKey("attachedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.Group", b =>
                {
                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("attachedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.GroupComment", b =>
                {
                    b.HasOne("Slush.Data.Entity.Community.Group", null)
                        .WithMany()
                        .HasForeignKey("groupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.Post", b =>
                {
                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("authorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Community.Topic", null)
                        .WithMany()
                        .HasForeignKey("discussionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.Community.Topic", b =>
                {
                    b.HasOne("Slush.Data.Entity.Community.Group", null)
                        .WithMany()
                        .HasForeignKey("attachedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("authorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.LanguageInGame", b =>
                {
                    b.HasOne("Slush.Entity.Store.Product.GameInShop", null)
                        .WithMany()
                        .HasForeignKey("gameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Language", null)
                        .WithMany()
                        .HasForeignKey("languageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.Profile.Screenshot", b =>
                {
                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("authorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Entity.Store.Product.GameInShop", null)
                        .WithMany()
                        .HasForeignKey("gameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.Profile.UserComment", b =>
                {
                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("authorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Data.Entity.Profile.Video", b =>
                {
                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("authorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Entity.Store.Product.GameInShop", null)
                        .WithMany()
                        .HasForeignKey("gameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Entity.Chat.Chat", b =>
                {
                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("firstUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("secondUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Entity.Chat.Message", b =>
                {
                    b.HasOne("Slush.Entity.Chat.Chat", null)
                        .WithMany()
                        .HasForeignKey("chatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("senderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Entity.Profile.AchievementByUser", b =>
                {
                    b.HasOne("Slush.Entity.Profile.Achievement", null)
                        .WithMany()
                        .HasForeignKey("achievementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Entity.Profile.Friends", b =>
                {
                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("friendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Entity.Profile.OwnedGame", b =>
                {
                    b.HasOne("Slush.Entity.Store.Product.GameInShop", null)
                        .WithMany()
                        .HasForeignKey("ownedGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Entity.Profile.Settings", b =>
                {
                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("attachedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Entity.Profile.UserCategory", b =>
                {
                    b.HasOne("Slush.Entity.Profile.CategoryByUserForGame", null)
                        .WithMany()
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Entity.Profile.OwnedGame", null)
                        .WithMany()
                        .HasForeignKey("ownedGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Entity.Profile.WalletTransactions", b =>
                {
                    b.HasOne("Slush.Entity.Store.Product.DLCInShop", null)
                        .WithMany()
                        .HasForeignKey("transactionObj")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Entity.Store.Product.GameInShop", null)
                        .WithMany()
                        .HasForeignKey("transactionObj")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Entity.Profile.WishedGame", b =>
                {
                    b.HasOne("Slush.Entity.Store.Product.GameInShop", null)
                        .WithMany()
                        .HasForeignKey("ownedGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Data.Entity.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Entity.Store.Product.DLCInShop", b =>
                {
                    b.HasOne("Slush.Entity.Store.Product.Creators.Developer", null)
                        .WithMany()
                        .HasForeignKey("developerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Entity.Store.Product.GameInShop", null)
                        .WithMany()
                        .HasForeignKey("gameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Entity.Store.Product.Creators.Publisher", null)
                        .WithMany()
                        .HasForeignKey("publisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Entity.Store.Product.GameBundleCollection", b =>
                {
                    b.HasOne("Slush.Entity.Store.Product.GameBundle", null)
                        .WithMany()
                        .HasForeignKey("bundleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Entity.Store.Product.DLCInShop", null)
                        .WithMany()
                        .HasForeignKey("dlcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Entity.Store.Product.GameInShop", null)
                        .WithMany()
                        .HasForeignKey("gameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Slush.Entity.Store.Product.GameInShop", b =>
                {
                    b.HasOne("Slush.Entity.Store.Product.Creators.Developer", null)
                        .WithMany()
                        .HasForeignKey("developerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Slush.Entity.Store.Product.Creators.Publisher", null)
                        .WithMany()
                        .HasForeignKey("publisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
