// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Slush.Data;

#nullable disable

namespace FullStackBrist.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            //MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GroupUser", b =>
            {
                b.Property<String>("groupsid")
                    .HasColumnType("varchar(255)");

                b.Property<String>("usersid")
                    .HasColumnType("varchar(255)");

                b.HasKey("groupsid", "usersid");

                b.HasIndex("usersid");

                b.ToTable("GroupUser");
            });

            modelBuilder.Entity("Slush.Data.Entity.Categories", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("description")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("name")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.ToTable("dbCategories");
            });

            modelBuilder.Entity("Slush.Data.Entity.CategoryByAuthor", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("description")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("image")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("name")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.ToTable("dbCategoriesByAuthors");
            });

            modelBuilder.Entity("Slush.Data.Entity.CategoryByUser", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("description")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("name")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.ToTable("dbCategoriesByUsers");
            });

            modelBuilder.Entity("Slush.Data.Entity.CategoryForGame", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("categoryId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("gameId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.ToTable("dbCategoriesForGame");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameComment", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("Authorid")
                    .HasColumnType("varchar(255)");

                b.Property<String>("GamePostsid")
                    .HasColumnType("varchar(255)");

                b.Property<String>("content")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("gamePostId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.HasIndex("Authorid");

                b.HasIndex("GamePostsid");

                b.ToTable("dbGameComments");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameGroup", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("gameId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.ToTable("dbGameGroups");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameGuide", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("authorId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("content")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("description")
                    .HasColumnType("longtext");

                b.Property<String>("discussionId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("dislikesCount")
                    .HasColumnType("int");

                b.Property<String>("gameGroupId")
                    .IsRequired()
                    .HasColumnType("varchar(255)");

                b.Property<String>("gameId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("likesCount")
                    .HasColumnType("int");

                b.Property<String>("title")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.HasIndex("gameGroupId");

                b.ToTable("dbGameGuides");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameNews", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("authorId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("content")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("description")
                    .HasColumnType("longtext");

                b.Property<String>("discussionId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("dislikesCount")
                    .HasColumnType("int");

                b.Property<String>("gameGroupid")
                    .IsRequired()
                    .HasColumnType("varchar(255)");

                b.Property<String>("gameId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("likesCount")
                    .HasColumnType("int");

                b.Property<String>("title")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.HasIndex("gameGroupid");

                b.ToTable("dbGameNews");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GamePosts", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("GameTopicid")
                    .HasColumnType("varchar(255)");

                b.Property<String>("authorId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("content")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("description")
                    .HasColumnType("longtext");

                b.Property<String>("discussionId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("dislikesCount")
                    .HasColumnType("int");

                b.Property<String>("gameGroupid")
                    .IsRequired()
                    .HasColumnType("varchar(255)");

                b.Property<String>("gameId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("likesCount")
                    .HasColumnType("int");

                b.Property<String>("title")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.HasIndex("GameTopicid");

                b.HasIndex("gameGroupid");

                b.ToTable("dbGamePosts");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameTopic", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("GameGroupid")
                    .HasColumnType("varchar(255)");

                b.Property<String>("attachedId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("description")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("name")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.HasIndex("GameGroupid");

                b.ToTable("dbGameTopics");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.Group", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("attachedId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("description")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("name")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.ToTable("dbGroups");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.GroupComment", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("content")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("groupId")
                    .IsRequired()
                    .HasColumnType("varchar(255)");

                b.Property<Guid>("userId")
                    .HasColumnType("char(36)");

                b.HasKey("id");

                b.HasIndex("groupId");

                b.ToTable("dbGroupComments");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.Post", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("Topicid")
                    .HasColumnType("varchar(255)");

                b.Property<String>("authorId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("content")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("description")
                    .HasColumnType("longtext");

                b.Property<String>("discussionId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("dislikesCount")
                    .HasColumnType("int");

                b.Property<String>("gameId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("likesCount")
                    .HasColumnType("int");

                b.Property<String>("title")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.HasIndex("Topicid");

                b.ToTable("dbPosts");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.Topic", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("Groupid")
                    .HasColumnType("varchar(255)");

                b.Property<String>("attachedId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<Guid>("authorId")
                    .HasColumnType("char(36)");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("description")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("name")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.HasIndex("Groupid");

                b.ToTable("dbTopics");
            });

            modelBuilder.Entity("Slush.Data.Entity.Language", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("name")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.ToTable("dbLanguages");
            });

            modelBuilder.Entity("Slush.Data.Entity.LanguageInGame", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("DLCInShopid")
                    .HasColumnType("varchar(255)");

                b.Property<String>("GameInShopid")
                    .HasColumnType("varchar(255)");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("gameId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("languageId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.HasIndex("DLCInShopid");

                b.HasIndex("GameInShopid");

                b.ToTable("dbLanguagesInGame");
            });

            modelBuilder.Entity("Slush.Data.Entity.MaximumSystemRequirement", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("OS")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("RAM")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("freeDiskSpace")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("gameId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("processor")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("video")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.ToTable("dbMaximumSystemRequirements");
            });

            modelBuilder.Entity("Slush.Data.Entity.MinimalSystemRequirement", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("OS")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("RAM")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("freeDiskSpace")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("gameId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("processor")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("video")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.ToTable("dbMinimalSystemRequirements");
            });

            modelBuilder.Entity("Slush.Data.Entity.Profile.Screenshot", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("GameGroupid")
                    .HasColumnType("varchar(255)");

                b.Property<String>("Userid")
                    .HasColumnType("varchar(255)");

                b.Property<String>("authorId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("description")
                    .HasColumnType("longtext");

                b.Property<String>("discussionId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("dislikesCount")
                    .HasColumnType("int");

                b.Property<String>("gameId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("likesCount")
                    .HasColumnType("int");

                b.Property<String>("screenshotUrl")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("title")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.HasIndex("GameGroupid");

                b.HasIndex("Userid");

                b.ToTable("dbScreenshots");
            });

            modelBuilder.Entity("Slush.Data.Entity.Profile.User", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("email")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("name")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("passwordSalt")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("phone")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("salt")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.ToTable("dbUsers");
            });

            modelBuilder.Entity("Slush.Data.Entity.Profile.UserComment", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<Guid>("authorId")
                    .HasColumnType("char(36)");

                b.Property<String>("content")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("userId")
                    .IsRequired()
                    .HasColumnType("varchar(255)");

                b.HasKey("id");

                b.HasIndex("userId");

                b.ToTable("dbUserComments");
            });

            modelBuilder.Entity("Slush.Data.Entity.Profile.Video", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("GameGroupid")
                    .HasColumnType("varchar(255)");

                b.Property<String>("Userid")
                    .HasColumnType("varchar(255)");

                b.Property<String>("authorId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("description")
                    .HasColumnType("longtext");

                b.Property<String>("discussionId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("dislikesCount")
                    .HasColumnType("int");

                b.Property<String>("gameId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("likesCount")
                    .HasColumnType("int");

                b.Property<String>("title")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("videoUrl")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.HasIndex("GameGroupid");

                b.HasIndex("Userid");

                b.ToTable("dbVideos");
            });

            modelBuilder.Entity("Slush.Data.Entity.SystemRequirement", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("OS")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("RAM")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("freeDiskSpace")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("gameId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("processor")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("video")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.ToTable("dbSystemRequirements");
            });

            modelBuilder.Entity("Slush.Entity.Abstract.Author", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<int>("subscribersCount")
                    .HasColumnType("int");

                b.HasKey("id");

                b.ToTable("Author");
            });

            modelBuilder.Entity("Slush.Entity.Profile.Friends", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("friendId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("userId")
                    .IsRequired()
                    .HasColumnType("varchar(255)");

                b.HasKey("id");

                b.HasIndex("userId");

                b.ToTable("dbFriends");
            });

            modelBuilder.Entity("Slush.Entity.Profile.OwnedGame", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("ownedGameId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("userId")
                    .IsRequired()
                    .HasColumnType("varchar(255)");

                b.HasKey("id");

                b.HasIndex("userId");

                b.ToTable("dbOwnedGames");
            });

            modelBuilder.Entity("Slush.Entity.Profile.WishedGame", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("ownedGameId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("userId")
                    .IsRequired()
                    .HasColumnType("varchar(255)");

                b.HasKey("id");

                b.HasIndex("userId");

                b.ToTable("dbWishedGames");
            });

            modelBuilder.Entity("Slush.Entity.Store.Product.Creators.Developer", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("avatar")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("backgroundImage")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("description")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("name")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("subscribersCount")
                    .HasColumnType("int");

                b.Property<String>("urlForNewsPage")
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.ToTable("dbDevelopers");
            });

            modelBuilder.Entity("Slush.Entity.Store.Product.Creators.Publisher", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("avatar")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("backgroundImage")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("description")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("name")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("subscribersCount")
                    .HasColumnType("int");

                b.Property<String>("urlForNewsPage")
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.ToTable("dbPublishers");
            });

            modelBuilder.Entity("Slush.Entity.Store.Product.DLCInShop", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("categories")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("categoriesId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime>("dateOfRelease")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("developerId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("discount")
                    .HasColumnType("int");

                b.Property<String>("gameId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("gameImages")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("languagesId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("name")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("previeImage")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<float>("price")
                    .HasColumnType("float");

                b.Property<String>("publisherId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("systemRequirementsId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("urlForContent")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.ToTable("dbDLCsInShop");
            });

            modelBuilder.Entity("Slush.Entity.Store.Product.GameInShop", b =>
            {
                b.Property<String>("id")
                    .HasColumnType("varchar(255)");

                b.Property<String>("categoriesId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("createdAt")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime>("dateOfRelease")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("deleteAt")
                    .HasColumnType("datetime(6)");

                b.Property<String>("developerId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("discount")
                    .HasColumnType("int");

                b.Property<String>("gameImages")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("languagesId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("name")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("previeImage")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<float>("price")
                    .HasColumnType("float");

                b.Property<String>("publisherId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("systemRequirementsId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<String>("urlForContent")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("id");

                b.ToTable("dbGamesInShops");
            });

            modelBuilder.Entity("System.Collections.Generic.List<object>", b =>
            {
                b.Property<int>("Capacity")
                    .HasColumnType("int");

                b.ToTable("List<object>");
            });

            modelBuilder.Entity("GroupUser", b =>
            {
                b.HasOne("Slush.Data.Entity.Community.Group", null)
                    .WithMany()
                    .HasForeignKey("groupsid")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Slush.Data.Entity.Profile.User", null)
                    .WithMany()
                    .HasForeignKey("usersid")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameComment", b =>
            {
                b.HasOne("Slush.Entity.Abstract.Author", "Author")
                    .WithMany()
                    .HasForeignKey("Authorid");

                b.HasOne("Slush.Data.Entity.Community.GameGroup.GamePosts", null)
                    .WithMany("comments")
                    .HasForeignKey("GamePostsid");

                b.Navigation("Author");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameGuide", b =>
            {
                b.HasOne("Slush.Data.Entity.Community.GameGroup.GameGroup", "gameGroup")
                    .WithMany()
                    .HasForeignKey("gameGroupId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("gameGroup");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameNews", b =>
            {
                b.HasOne("Slush.Data.Entity.Community.GameGroup.GameGroup", "gameGroup")
                    .WithMany("news")
                    .HasForeignKey("gameGroupid")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("gameGroup");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GamePosts", b =>
            {
                b.HasOne("Slush.Data.Entity.Community.GameGroup.GameTopic", null)
                    .WithMany("posts")
                    .HasForeignKey("GameTopicid");

                b.HasOne("Slush.Data.Entity.Community.GameGroup.GameGroup", "gameGroup")
                    .WithMany()
                    .HasForeignKey("gameGroupid")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("gameGroup");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameTopic", b =>
            {
                b.HasOne("Slush.Data.Entity.Community.GameGroup.GameGroup", null)
                    .WithMany("topics")
                    .HasForeignKey("GameGroupid");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.GroupComment", b =>
            {
                b.HasOne("Slush.Data.Entity.Community.Group", null)
                    .WithMany("comments")
                    .HasForeignKey("groupId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.Post", b =>
            {
                b.HasOne("Slush.Data.Entity.Community.Topic", null)
                    .WithMany("posts")
                    .HasForeignKey("Topicid");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.Topic", b =>
            {
                b.HasOne("Slush.Data.Entity.Community.Group", null)
                    .WithMany("topics")
                    .HasForeignKey("Groupid");
            });

            modelBuilder.Entity("Slush.Data.Entity.LanguageInGame", b =>
            {
                b.HasOne("Slush.Entity.Store.Product.DLCInShop", null)
                    .WithMany("languages")
                    .HasForeignKey("DLCInShopid");

                b.HasOne("Slush.Entity.Store.Product.GameInShop", null)
                    .WithMany("languages")
                    .HasForeignKey("GameInShopid");
            });

            modelBuilder.Entity("Slush.Data.Entity.Profile.Screenshot", b =>
            {
                b.HasOne("Slush.Data.Entity.Community.GameGroup.GameGroup", null)
                    .WithMany("screenshots")
                    .HasForeignKey("GameGroupid");

                b.HasOne("Slush.Data.Entity.Profile.User", null)
                    .WithMany("screenshots")
                    .HasForeignKey("Userid");
            });

            modelBuilder.Entity("Slush.Data.Entity.Profile.UserComment", b =>
            {
                b.HasOne("Slush.Data.Entity.Profile.User", null)
                    .WithMany("comments")
                    .HasForeignKey("userId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("Slush.Data.Entity.Profile.Video", b =>
            {
                b.HasOne("Slush.Data.Entity.Community.GameGroup.GameGroup", null)
                    .WithMany("videos")
                    .HasForeignKey("GameGroupid");

                b.HasOne("Slush.Data.Entity.Profile.User", null)
                    .WithMany("videos")
                    .HasForeignKey("Userid");
            });

            modelBuilder.Entity("Slush.Entity.Profile.Friends", b =>
            {
                b.HasOne("Slush.Data.Entity.Profile.User", null)
                    .WithMany("friends")
                    .HasForeignKey("userId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("Slush.Entity.Profile.OwnedGame", b =>
            {
                b.HasOne("Slush.Data.Entity.Profile.User", null)
                    .WithMany("ownedGames")
                    .HasForeignKey("userId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("Slush.Entity.Profile.WishedGame", b =>
            {
                b.HasOne("Slush.Data.Entity.Profile.User", null)
                    .WithMany("wishedGames")
                    .HasForeignKey("userId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameGroup", b =>
            {
                b.Navigation("news");

                b.Navigation("screenshots");

                b.Navigation("topics");

                b.Navigation("videos");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GamePosts", b =>
            {
                b.Navigation("comments");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.GameGroup.GameTopic", b =>
            {
                b.Navigation("posts");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.Group", b =>
            {
                b.Navigation("comments");

                b.Navigation("topics");
            });

            modelBuilder.Entity("Slush.Data.Entity.Community.Topic", b =>
            {
                b.Navigation("posts");
            });

            modelBuilder.Entity("Slush.Data.Entity.Profile.User", b =>
            {
                b.Navigation("comments");

                b.Navigation("friends");

                b.Navigation("ownedGames");

                b.Navigation("screenshots");

                b.Navigation("videos");

                b.Navigation("wishedGames");
            });

            modelBuilder.Entity("Slush.Entity.Store.Product.DLCInShop", b =>
            {
                b.Navigation("languages");
            });

            modelBuilder.Entity("Slush.Entity.Store.Product.GameInShop", b =>
            {
                b.Navigation("languages");
            });
#pragma warning restore 612, 618
        }
    }
}